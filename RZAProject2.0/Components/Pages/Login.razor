@* Page dedicated to login system, does not yet contain functionality *@

@page "/account"
@using RZAProject2.Models
@using RZAProject2.Utilities
@using RZAProject2.Services
@inject CustomerService CustomerService
@inject NavigationManager NavigationManager
@inject UserSession UserSession

@rendermode InteractiveServer


<link rel="stylesheet" href="CSS/style.css" />


<div class="register-container">
    <div class="register-card">
        <div class="register">
            <EditForm Model="newCustomer" OnValidSubmit="HandleValidSubmit" FromName="LoginForm">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <h3 style="text-align: center"> Login</h3><br>
                <label> Username</label>
                <input type="text" id="username" name="username" @bind-value=newCustomer.Username required><br>

                <label> Password</label>
                <input type="password" id="password" name="password" @bind-value=@password required><br>

                <div class="loginButton">
                    <button type="submit">Submit</button>
                </div>
                <div class="loginButton">
                    <p>Don't Have An Account? <a href="/register">Sign Up Now</a></p>
                </div>

                <div class="loginButton">
                    <p><a href="/Modify">Reset Password?</a></p>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private Customer newCustomer = new Customer();
    private string password;

    #region Hidden
    protected override async Task OnInitializedAsync()
    {
        if (UserSession.UserId != 0)
        {
            NavigationManager.NavigateTo("/");
        }
    }
    #endregion

    private async Task HandleValidSubmit()
    {
        newCustomer.Password = PasswordUtils.HashPassword(password);
        newCustomer = await CustomerService.LogIn(newCustomer);
        if (newCustomer == null)
        {
            Console.WriteLine("could not log in");
        }
        else
        {
            UserSession.UserId = newCustomer.CustomerId;
            NavigationManager.NavigateTo("/account");
        }
    }
}